[tool.flakehell]
exclude = ["example.py", "setup.py", "README.rst"]
max_line_length = 120
show_source = true

[tool.flakehell.plugins]
pycodestyle = ["+*"]
pyflakes = ["+*"]
flake8-commas = ["+*"]
flake8-quotes = ["+*"]
pylint = ["+F*", "+E*", "-E0611", "-E1101", "-E0401"]

# -- DEPHELL -- #

[tool.dephell.main]
from = {format = "flit", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}
envs = ["main", "dev"]
tag = "v."
command = "python -m flakehell lint"

[tool.dephell.pytest]
from = {format = "flit", path = "pyproject.toml"}
envs = ["main", "dev"]
tests = ["tests"]
command = "python -m pytest tests/"

[tool.dephell.docs]
from = {format = "flit", path = "pyproject.toml"}
envs = ["docs"]
command = "sphinx-build -W docs docs/build"

[tool.dephell.isort]
from = {format = "flit", path = "pyproject.toml"}
envs = ["main", "dev"]
command = "isort -rc -y"

[tool.dephell.typing]
from = {format = "flit", path = "pyproject.toml"}
envs = ["main"]
command = "mypy --ignore-missing-imports --allow-redefinition flakehell/"

# -- ISORT -- #

[tool.isort]
line_length = 120
combine_as_imports = true
balanced_wrapping = true
lines_after_imports = 2
not_skip = "__init__.py"
multi_line_output = 5

import_heading_stdlib = "built-in"
import_heading_thirdparty = "external"
import_heading_firstparty = "project"
import_heading_localfolder = "app"

# -- FLIT -- #

[tool.flit.metadata]
module="flakehell"
author="Gram (@orsinium)"
author-email="master_fess@mail.ru"
home-page="https://github.com/life4/flakehell"
requires-python=">=3.5"
requires=[
    "entrypoints",
    "flake8>=3.8.0",
    "pygments",
    "pylint",
    "termcolor",
    "toml",
    "urllib3",
]
description-file="README.md"
classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Framework :: Flake8",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.flit.metadata.urls]
Documentation = "https://flakehell.readthedocs.io/"

[tool.flit.scripts]
flakehell = "flakehell:entrypoint"
flake8helled = "flakehell:flake8_entrypoint"

[tool.flit.entrypoints."flake8.extension"]
pylint = "flakehell.plugins:PyLintChecker"

[tool.flit.entrypoints."flake8.report"]
baseline = "flakehell.formatters:BaseLineFormatter"
colored = "flakehell.formatters:ColoredFormatter"
gitlab = "flakehell.formatters:GitlabFormatter"
grouped = "flakehell.formatters:GroupedFormatter"
json = "flakehell.formatters:JSONFormatter"
stat = "flakehell.formatters:StatFormatter"

[tool.flit.metadata.requires-extra]
docs = [
    "alabaster",
    "pygments-github-lexers",
    "recommonmark",
    "sphinx",
]
dev = [
    "dlint",
    "flake8-alfred",
    "flake8-annotations-complexity",
    "flake8-bandit",
    "flake8-broken-line",
    "flake8-bugbear",
    "flake8-builtins",
    "flake8-coding",
    "flake8-commas",
    "flake8-comprehensions",
    "flake8-debugger",
    "flake8-django",
    "flake8-docstrings",
    "flake8-eradicate",
    "flake8-executable",
    "flake8-future-import",
    "flake8-isort",
    "flake8-logging-format",
    "flake8-mock",
    "flake8-mutable",
    "flake8-pep3101",
    "flake8-pie",
    "flake8-print",
    "flake8-pytest",
    "flake8-quotes",
    "flake8-rst-docstrings",
    "flake8-scrapy",
    "flake8-strict",
    "flake8-string-format",
    "flake8-variables-names",
    "mccabe",
    "pep8-naming",
    "pylint",
    "typing-extensions", # required by WPS but isn't installed by DepHell
    "wemake-python-styleguide",

    "pytest",
    "isort[pyproject] < 5",
]
